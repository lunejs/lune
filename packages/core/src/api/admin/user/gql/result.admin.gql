"""
A list of users
"""
type UserList implements List {
  items: [User!]!
  count: Int!
  pageInfo: PageInfo!
}

type UserAccessTokenResult {
  apiErrors: [UserErrorResult!]!
  """
  The access token for the user, needed to access user-specific resources
  """
  accessToken: String
}

type UserResult {
  user: User
  apiErrors: [UserErrorResult!]!
}

type UserErrorResult {
  code: UserErrorCode!
  message: String!
}

enum UserErrorCode {
  """
  Error thrown when the provided credentials are invalid
  """
  INVALID_CREDENTIALS
  """
  Error thrown when the email provided already exists in the system
  """
  EMAIL_ALREADY_EXISTS
  """
  Error thrown when the password provided is invalid, e.g., too short or does not meet complexity requirements
  """
  INVALID_PASSWORD
  """
  Error thrown when the provided email is not valid or does not conform to the expected format
  """
  INVALID_EMAIL
}
