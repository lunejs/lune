type Query {
  products(input: ProductListInput): ProductList!
}

input ProductListInput {
  """
  Skip the first n results
  """
  skip: Int

  """
  takes n result from where the skip position is
  """
  take: Int

  """
  Filters to apply
  """
  filters: ProductFilters

  """
  Sort order to apply
  """
  sort: ProductSort
}

input ProductFilters {
  name: StringFilter
  salePriceRange: PriceRange
  optionValues: [OptionValueFilter!]
  tag: String
}

input ProductSort {
  name: OrderBy
  salePrice: OrderBy
  stock: OrderBy
  createdAt: OrderBy
}

input OptionValueFilter {
  option: String!
  values: [String!]!
}
